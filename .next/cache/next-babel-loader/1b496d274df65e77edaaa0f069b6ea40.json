{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nexport default function useStats(url) {\n  var _useState = useState(),\n      stats = _useState[0],\n      setStats = _useState[1];\n\n  useEffect(function () {\n    console.log('Mounting or updating');\n\n    function fetchData() {\n      var data;\n      return _regeneratorRuntime.async(function fetchData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('Fetchung data');\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch(url).then(function (data) {\n                return data.json();\n              }));\n\n            case 3:\n              data = _context.sent;\n              setStats(data);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return stats;\n}","map":{"version":3,"sources":["/Users/gergonagy/work/coronaVirus/utils/useStats.js"],"names":["useState","useEffect","useStats","url","stats","setStats","console","log","fetchData","fetch","then","data","json"],"mappings":";AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,eAAe,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAAA,kBACVH,QAAQ,EADE;AAAA,MAC7BI,KAD6B;AAAA,MACtBC,QADsB;;AAEpCJ,EAAAA,SAAS,CAAC,YAAM;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;;AACA,aAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEF,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AADF;AAAA,+CAEqBE,KAAK,CAACN,GAAD,CAAL,CAAWO,IAAX,CAAgB,UAAAC,IAAI;AAAA,uBAAIA,IAAI,CAACC,IAAL,EAAJ;AAAA,eAApB,CAFrB;;AAAA;AAEQD,cAAAA,IAFR;AAGEN,cAAAA,QAAQ,CAACM,IAAD,CAAR;;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKAH,IAAAA,SAAS;AACV,GARQ,EAQN,EARM,CAAT;AASA,SAAOJ,KAAP;AACD","sourcesContent":["import { useState, useEffect } from 'react';\nexport default function useStats(url) {\n  const [stats, setStats] = useState();\n  useEffect(() => {\n    console.log('Mounting or updating');\n    async function fetchData() {\n      console.log('Fetchung data');\n      const data = await fetch(url).then(data => data.json());\n      setStats(data);\n    }\n    fetchData();\n  }, []);\n  return stats;\n}\n"]},"metadata":{},"sourceType":"module"}